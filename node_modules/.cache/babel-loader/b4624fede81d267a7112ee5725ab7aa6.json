{"ast":null,"code":"var _jsxFileName = \"/Users/francopagella/Desktop/code/week10/crm/crm/src/components/routes/analytics/charts/SalesSince.js\";\nimport React, { Component } from 'react';\nimport { LineChart, Line } from 'recharts';\nimport { Tooltip, Legend, CartesianGrid, XAxis, YAxis, ResponsiveContainer } from 'recharts';\n\nclass SalesSince extends Component {\n  constructor(props) {\n    super(props); //harcodeado\n\n    this.state = {\n      sales: [{\n        month: \"Jan\",\n        sales: 20\n      }, {\n        month: \"Feb\",\n        sales: 30\n      }, {\n        month: 'Mar',\n        sales: 25\n      }, {\n        month: 'Apr',\n        sales: 32\n      }, {\n        month: 'May',\n        sales: 39\n      }, {\n        month: 'Jun',\n        sales: 42\n      }, {\n        month: 'Jul',\n        sales: 60\n      }, {\n        month: 'Aug',\n        sales: 63\n      }, {\n        month: 'Sep',\n        sales: 59\n      }, {\n        month: 'Oct',\n        sales: 65\n      }, {\n        month: 'Nov',\n        sales: 50\n      }, {\n        month: \"Dic\",\n        sales: 43\n      }]\n    };\n  } // UNSAFE_componentWillReceiveProps(nextProps) {\n  //     // Any time props.email changes, update state.\n  //     if (nextProps.sales !== this.props.sales) {\n  //       this.setState({\n  //         sales: nextProps.sales\n  //       });\n  //     }\n  //   }\n\n\n  render() {\n    const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    let today = new Date();\n    let sales = React.createElement(ResponsiveContainer, {\n      width: \"100%\",\n      height: 300,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(LineChart, {\n      data: this.state.sales,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(Line, {\n      dataKey: \"sales\",\n      stroke: \"#8884d8\",\n      lineSize: 30,\n      dot: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), React.createElement(XAxis, {\n      dataKey: \"month\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), React.createElement(YAxis, {\n      dataKey: \"sales\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    })));\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Sales since  \", monthNames[today.getMonth()], \" \", today.getFullYear(), sales);\n  }\n\n}\n\nexport default SalesSince;","map":{"version":3,"sources":["/Users/francopagella/Desktop/code/week10/crm/crm/src/components/routes/analytics/charts/SalesSince.js"],"names":["React","Component","LineChart","Line","Tooltip","Legend","CartesianGrid","XAxis","YAxis","ResponsiveContainer","SalesSince","constructor","props","state","sales","month","render","monthNames","today","Date","getMonth","getFullYear"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { LineChart, Line } from 'recharts';\nimport {  Tooltip, Legend, CartesianGrid, XAxis, YAxis, ResponsiveContainer } from 'recharts';\n\n\n\nclass SalesSince extends Component {\n    constructor(props) {\n        super(props)\n        //harcodeado\n        this.state = {\n            sales: [\n                {month: \"Jan\", sales:20},\n                {month: \"Feb\", sales:30},\n                {month: 'Mar', sales:25},\n                {month: 'Apr', sales:32},\n                {month: 'May', sales:39},\n                {month: 'Jun', sales:42},\n                {month: 'Jul', sales:60},\n                {month: 'Aug', sales:63},\n                {month: 'Sep', sales:59},\n                {month: 'Oct', sales:65},\n                {month: 'Nov', sales:50},\n                {month: \"Dic\", sales:43},\n            ]\n        }\n\n    }\n\n\n    // UNSAFE_componentWillReceiveProps(nextProps) {\n    //     // Any time props.email changes, update state.\n    //     if (nextProps.sales !== this.props.sales) {\n    //       this.setState({\n    //         sales: nextProps.sales\n    //       });\n    //     }\n    //   }\n\n\n\n\n    render() {\n        const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n            \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n        ]\n        let today = new Date()\n\n        let sales = (\n            <ResponsiveContainer width='100%' height={300}><LineChart data={this.state.sales} >\n                <Line dataKey=\"sales\" stroke=\"#8884d8\" lineSize={30} dot={true}/>\n                <XAxis  dataKey=\"month\" />\n                <YAxis dataKey='sales'/>\n            </LineChart></ResponsiveContainer>)\n\n        return (<div>\n            Sales since  {monthNames[today.getMonth() ]} {today.getFullYear()}\n            {sales}\n        </div>)\n    }\n}\nexport default SalesSince;"]},"metadata":{},"sourceType":"module"}