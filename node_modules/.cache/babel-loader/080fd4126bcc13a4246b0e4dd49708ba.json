{"ast":null,"code":"var _jsxFileName = \"/Users/francopagella/Desktop/code/week10/crm/crm/src/components/routes/analytics/charts/TopEmployees.js\";\nimport React, { Component } from 'react';\nimport { BarChart, Bar } from 'recharts';\nimport { LineChart, Line, Tooltip, Legend, CartesianGrid, XAxis, YAxis } from 'recharts';\n\nclass TopEmployees extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      topEmployees: [{\n        name: \"Jorge\",\n        sales: 40\n      }, {\n        name: \"Maria\",\n        sales: 20\n      }, {\n        name: \"Laura\",\n        sales: 50\n      }]\n    };\n  }\n\n  render() {\n    const renderLineChart = React.createElement(BarChart, {\n      width: 600,\n      height: 300,\n      data: this.state.topEmployees,\n      layout: \"vertical\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, React.createElement(Bar, {\n      dataKey: \"sales\",\n      stroke: \"#8884d8\",\n      barSize: 30,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }), React.createElement(XAxis, {\n      type: \"number\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }), React.createElement(YAxis, {\n      type: \"category\",\n      dataKey: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }), React.createElement(Tooltip, {\n      Style: {\n        opacity: 0.5,\n        backgroundColor: '#000000',\n        width: 200\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }));\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, renderLineChart);\n  }\n\n}\n\nexport default TopEmployees;","map":{"version":3,"sources":["/Users/francopagella/Desktop/code/week10/crm/crm/src/components/routes/analytics/charts/TopEmployees.js"],"names":["React","Component","BarChart","Bar","LineChart","Line","Tooltip","Legend","CartesianGrid","XAxis","YAxis","TopEmployees","constructor","props","state","topEmployees","name","sales","render","renderLineChart","opacity","backgroundColor","width"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,EAAmBC,GAAnB,QAA8B,UAA9B;AACA,SAASC,SAAT,EAAoBC,IAApB,EAA0BC,OAA1B,EAAmCC,MAAnC,EAA2CC,aAA3C,EAA0DC,KAA1D,EAAiEC,KAAjE,QAA8E,UAA9E;;AAEA,MAAMC,YAAN,SAA2BV,SAA3B,CAAqC;AACjCW,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,YAAY,EAAE,CAAC;AAAEC,QAAAA,IAAI,EAAE,OAAR;AAAiBC,QAAAA,KAAK,EAAE;AAAxB,OAAD,EAA+B;AAAED,QAAAA,IAAI,EAAE,OAAR;AAAiBC,QAAAA,KAAK,EAAE;AAAxB,OAA/B,EAA6D;AAAED,QAAAA,IAAI,EAAE,OAAR;AAAiBC,QAAAA,KAAK,EAAE;AAAxB,OAA7D;AADL,KAAb;AAIH;;AAGDC,EAAAA,MAAM,GAAG;AAEL,UAAMC,eAAe,GACjB,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAE,GAAjB;AAAsB,MAAA,MAAM,EAAE,GAA9B;AAAmC,MAAA,IAAI,EAAE,KAAKL,KAAL,CAAWC,YAApD;AAAkE,MAAA,MAAM,EAAC,UAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,GAAD;AAAK,MAAA,OAAO,EAAC,OAAb;AAAqB,MAAA,MAAM,EAAC,SAA5B;AAAsC,MAAA,OAAO,EAAE,EAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAuB,MAAA,OAAO,EAAC,MAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,EAII,oBAAC,OAAD;AAAS,MAAA,KAAK,EAAE;AAAGK,QAAAA,OAAO,EAAC,GAAX;AAAgBC,QAAAA,eAAe,EAAE,SAAjC;AAA4CC,QAAAA,KAAK,EAAE;AAAnD,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,CADJ;AAUA,WAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACHH,eADG,CAAR;AAGH;;AAzBgC;;AA2BrC,eAAeR,YAAf","sourcesContent":["import React, { Component } from 'react';\nimport { BarChart, Bar } from 'recharts';\nimport { LineChart, Line, Tooltip, Legend, CartesianGrid, XAxis, YAxis } from 'recharts';\n\nclass TopEmployees extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            topEmployees: [{ name: \"Jorge\", sales: 40 }, { name: \"Maria\", sales: 20 }, { name: \"Laura\", sales: 50 }]\n        }\n\n    }\n\n\n    render() {\n\n        const renderLineChart = (\n            <BarChart width={600} height={300} data={this.state.topEmployees} layout='vertical'>\n                <Bar dataKey=\"sales\" stroke=\"#8884d8\" barSize={30} />\n                <XAxis type=\"number\" />\n                <YAxis type=\"category\" dataKey=\"name\" />\n                <Tooltip Style={{  opacity:0.5, backgroundColor: '#000000', width: 200}}/>\n\n            </BarChart>)\n\n\n        return (<div>\n            {renderLineChart}\n        </div>)\n    }\n}\nexport default TopEmployees;"]},"metadata":{},"sourceType":"module"}