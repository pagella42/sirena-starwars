{"ast":null,"code":"import _defineProperty from \"/Users/francopagella/Desktop/code/week10/crm/crm/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/francopagella/Desktop/code/week10/crm/crm/src/components/routes/analytics/Analytics.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\n\nclass Analytics extends Component {\n  constructor() {\n    super();\n    this.state = {\n      data: []\n    };\n  }\n\n  async componentDidMount() {\n    let data = await axios.get('http://localhost:5000/clients');\n\n    let state = _objectSpread({}, this.state.data);\n\n    state = data.data;\n    this.setState({\n      data: state\n    });\n    this.setState({\n      length: Math.ceil(this.state.data.length / 20)\n    });\n  }\n\n  async componentDidUpdate() {\n    let data = await axios.get('http://localhost:5000/clients');\n\n    let state = _objectSpread({}, this.state.data);\n\n    state = data.data;\n    this.setState({\n      data: state\n    });\n    this.setState({\n      length: Math.ceil(this.state.data.length / 20)\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default Analytics;","map":{"version":3,"sources":["/Users/francopagella/Desktop/code/week10/crm/crm/src/components/routes/analytics/Analytics.js"],"names":["React","Component","Analytics","constructor","state","data","componentDidMount","axios","get","setState","length","Math","ceil","componentDidUpdate","render"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AACA,MAAMC,SAAN,SAAwBD,SAAxB,CAAkC;AAE9BE,EAAAA,WAAW,GAAG;AACV;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE;AADK,KAAb;AAGD;;AAED,QAAMC,iBAAN,GAA0B;AAGxB,QAAID,IAAI,GAAG,MAAME,KAAK,CAACC,GAAN,CAAU,+BAAV,CAAjB;;AAEA,QAAIJ,KAAK,qBAAO,KAAKA,KAAL,CAAWC,IAAlB,CAAT;;AACAD,IAAAA,KAAK,GAAGC,IAAI,CAACA,IAAb;AAEA,SAAKI,QAAL,CAAc;AAAEJ,MAAAA,IAAI,EAAED;AAAR,KAAd;AACA,SAAKK,QAAL,CAAc;AAACC,MAAAA,MAAM,EAAGC,IAAI,CAACC,IAAL,CAAU,KAAKR,KAAL,CAAWC,IAAX,CAAgBK,MAAhB,GAAyB,EAAnC;AAAV,KAAd;AAEA;;AAED,QAAMG,kBAAN,GAA2B;AAEzB,QAAIR,IAAI,GAAG,MAAME,KAAK,CAACC,GAAN,CAAU,+BAAV,CAAjB;;AAEA,QAAIJ,KAAK,qBAAO,KAAKA,KAAL,CAAWC,IAAlB,CAAT;;AACAD,IAAAA,KAAK,GAAGC,IAAI,CAACA,IAAb;AAEA,SAAKI,QAAL,CAAc;AAAEJ,MAAAA,IAAI,EAAED;AAAR,KAAd;AACA,SAAKK,QAAL,CAAc;AAACC,MAAAA,MAAM,EAAGC,IAAI,CAACC,IAAL,CAAU,KAAKR,KAAL,CAAWC,IAAX,CAAgBK,MAAhB,GAAyB,EAAnC;AAAV,KAAd;AAEA;;AAELI,EAAAA,MAAM,GAAG;AACL,WAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAR;AACH;;AApC6B;;AAsClC,eAAeZ,SAAf","sourcesContent":["import React, { Component } from 'react';\nclass Analytics extends Component {\n\n    constructor() {\n        super()\n        this.state = {\n          data: []\n        }\n      }\n\n      async componentDidMount() {\n  \n\n        let data = await axios.get('http://localhost:5000/clients')\n     \n        let state = {...this.state.data}\n        state = data.data\n     \n        this.setState({ data: state }) \n        this.setState({length:  Math.ceil(this.state.data.length / 20)})\n        \n       }\n     \n       async componentDidUpdate() {\n       \n         let data = await axios.get('http://localhost:5000/clients')\n     \n         let state = {...this.state.data}\n         state = data.data\n      \n         this.setState({ data: state }) \n         this.setState({length:  Math.ceil(this.state.data.length / 20)})\n         \n        }\n\n    render() {\n        return (<div></div>)\n    }\n}\nexport default Analytics;"]},"metadata":{},"sourceType":"module"}