{"ast":null,"code":"var _jsxFileName = \"/Users/francopagella/Desktop/code/week10/crm/crm/src/components/routes/analytics/charts/ClientAqcuisition.js\";\nimport React, { Component } from 'react';\nimport { PieChart, Pie } from 'recharts';\nimport { Tooltip, Legend, CartesianGrid, XAxis, YAxis, ResponsiveContainer } from 'recharts';\n\nclass ClientAqcuisition extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      periods: [{\n        period: \"> 12 Mons ago\",\n        amount: 508\n      }, {\n        period: \"6-12 Mons ago\",\n        amount: 200\n      }, {\n        period: \"Last 6 Mons\",\n        amount: 308\n      }, {\n        period: \"last Mon\",\n        amount: 65\n      }]\n    };\n  }\n\n  render() {\n    const renderLabel = ({\n      cx,\n      cy,\n      midAngle,\n      innerRadius,\n      outerRadius,\n      percent,\n      index\n    }) => {\n      const radius = innerRadius + (outerRadius - innerRadius) * 1.5;\n      const x = cx + radius * Math.cos(-midAngle * RADIAN);\n      const y = cy + radius * Math.sin(-midAngle * RADIAN);\n      const item = chartData[index];\n      return React.createElement(\"text\", {\n        x: x,\n        y: y,\n        fill: \"black\",\n        textAnchor: x > cx ? 'start' : 'end',\n        dominantBaseline: \"central\",\n        key: \"label-\".concat(data.Id, \"-\").concat(item.Id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, item.Name, \" (\", item.Count, \")  // all I really need to customize\");\n    };\n\n    let chart = React.createElement(ResponsiveContainer, {\n      width: \"100%\",\n      height: 200,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(PieChart, {\n      width: 200,\n      height: 200,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(Pie, {\n      data: this.state.periods,\n      dataKey: \"amount\",\n      nameKey: \"period\",\n      outerRadius: 50,\n      fill: \"#8884d8\",\n      label: renderLabel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    })));\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, chart);\n  }\n\n}\n\nexport default ClientAqcuisition;","map":{"version":3,"sources":["/Users/francopagella/Desktop/code/week10/crm/crm/src/components/routes/analytics/charts/ClientAqcuisition.js"],"names":["React","Component","PieChart","Pie","Tooltip","Legend","CartesianGrid","XAxis","YAxis","ResponsiveContainer","ClientAqcuisition","constructor","props","state","periods","period","amount","render","renderLabel","cx","cy","midAngle","innerRadius","outerRadius","percent","index","radius","x","Math","cos","RADIAN","y","sin","item","chartData","data","Id","Name","Count","chart"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,EAAmBC,GAAnB,QAA8B,UAA9B;AACA,SAAUC,OAAV,EAAmBC,MAAnB,EAA2BC,aAA3B,EAA0CC,KAA1C,EAAiDC,KAAjD,EAAwDC,mBAAxD,QAAmF,UAAnF;;AAGA,MAAMC,iBAAN,SAAgCT,SAAhC,CAA0C;AACtCU,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAE,CACL;AAAEC,QAAAA,MAAM,EAAE,eAAV;AAA2BC,QAAAA,MAAM,EAAE;AAAnC,OADK,EAEL;AAAED,QAAAA,MAAM,EAAE,eAAV;AAA2BC,QAAAA,MAAM,EAAE;AAAnC,OAFK,EAGL;AAAED,QAAAA,MAAM,EAAE,aAAV;AAAyBC,QAAAA,MAAM,EAAE;AAAjC,OAHK,EAIL;AAAED,QAAAA,MAAM,EAAE,UAAV;AAAsBC,QAAAA,MAAM,EAAE;AAA9B,OAJK;AADA,KAAb;AAUH;;AAEDC,EAAAA,MAAM,GAAG;AAEL,UAAMC,WAAW,GAAG,CAAC;AAACC,MAAAA,EAAD;AAAKC,MAAAA,EAAL;AAASC,MAAAA,QAAT;AAAmBC,MAAAA,WAAnB;AAAgCC,MAAAA,WAAhC;AAA6CC,MAAAA,OAA7C;AAAsDC,MAAAA;AAAtD,KAAD,KAAkE;AAClF,YAAMC,MAAM,GAAGJ,WAAW,GAAG,CAACC,WAAW,GAAGD,WAAf,IAA8B,GAA3D;AACA,YAAMK,CAAC,GAAGR,EAAE,GAAGO,MAAM,GAAGE,IAAI,CAACC,GAAL,CAAS,CAACR,QAAD,GAAYS,MAArB,CAAxB;AACA,YAAMC,CAAC,GAAGX,EAAE,GAAGM,MAAM,GAAGE,IAAI,CAACI,GAAL,CAAS,CAACX,QAAD,GAAYS,MAArB,CAAxB;AAEA,YAAMG,IAAI,GAAGC,SAAS,CAACT,KAAD,CAAtB;AAEA,aACE;AAAM,QAAA,CAAC,EAAEE,CAAT;AAAY,QAAA,CAAC,EAAEI,CAAf;AAAkB,QAAA,IAAI,EAAC,OAAvB;AAA+B,QAAA,UAAU,EAAEJ,CAAC,GAAGR,EAAJ,GAAS,OAAT,GAAmB,KAA9D;AAAqE,QAAA,gBAAgB,EAAC,SAAtF;AAAgG,QAAA,GAAG,kBAAWgB,IAAI,CAACC,EAAhB,cAAsBH,IAAI,CAACG,EAA3B,CAAnG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGH,IAAI,CAACI,IADR,QACgBJ,IAAI,CAACK,KADrB,yCADF;AAKD,KAZH;;AAcA,QAAIC,KAAK,GAAK,oBAAC,mBAAD;AAAqB,MAAA,KAAK,EAAC,MAA3B;AAAkC,MAAA,MAAM,EAAE,GAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA+C,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAE,GAAjB;AAAsB,MAAA,MAAM,EAAE,GAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACzD,oBAAC,GAAD;AAAK,MAAA,IAAI,EAAE,KAAK1B,KAAL,CAAWC,OAAtB;AAA+B,MAAA,OAAO,EAAC,QAAvC;AAAgD,MAAA,OAAO,EAAC,QAAxD;AAAkE,MAAA,WAAW,EAAE,EAA/E;AAAmF,MAAA,IAAI,EAAC,SAAxF;AAAkG,MAAA,KAAK,EAAEI,WAAzG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADyD,CAA/C,CAAd;AAIA,WAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACHqB,KADG,CAAR;AAGH;;AAtCqC;;AAwC1C,eAAe7B,iBAAf","sourcesContent":["import React, { Component } from 'react';\nimport { PieChart, Pie } from 'recharts';\nimport {  Tooltip, Legend, CartesianGrid, XAxis, YAxis, ResponsiveContainer } from 'recharts';\n\n\nclass ClientAqcuisition extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            periods: [\n                { period: \"> 12 Mons ago\", amount: 508 },\n                { period: \"6-12 Mons ago\", amount: 200 },\n                { period: \"Last 6 Mons\", amount: 308 },\n                { period: \"last Mon\", amount: 65 },\n\n            ]\n        }\n\n    }\n\n    render() {\n\n        const renderLabel = ({cx, cy, midAngle, innerRadius, outerRadius, percent, index}) => {\n            const radius = innerRadius + (outerRadius - innerRadius) * 1.5;\n            const x = cx + radius * Math.cos(-midAngle * RADIAN);\n            const y = cy + radius * Math.sin(-midAngle * RADIAN);\n          \n            const item = chartData[index];\n          \n            return (\n              <text x={x} y={y} fill=\"black\" textAnchor={x > cx ? 'start' : 'end'} dominantBaseline=\"central\" key={`label-${data.Id}-${item.Id}`}>\n                {item.Name} ({item.Count})  // all I really need to customize\n              </text>\n            )\n          }\n\n        let chart = ( <ResponsiveContainer width='100%' height={200}><PieChart width={200} height={200}>\n            <Pie data={this.state.periods} dataKey=\"amount\" nameKey=\"period\"  outerRadius={50} fill=\"#8884d8\" label={renderLabel}/>\n        </PieChart></ResponsiveContainer>)\n\n        return (<div>\n            {chart}\n        </div>)\n    }\n}\nexport default ClientAqcuisition;"]},"metadata":{},"sourceType":"module"}