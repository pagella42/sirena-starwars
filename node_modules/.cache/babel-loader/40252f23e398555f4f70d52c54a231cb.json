{"ast":null,"code":"var _jsxFileName = \"/Users/francopagella/Desktop/code/week10/crm/crm/src/components/routes/analytics/charts/TopEmployees.js\";\nimport React, { Component } from 'react';\nimport { BarChart, Bar } from 'recharts';\nimport { Tooltip, Legend, CartesianGrid, XAxis, YAxis, ResponsiveContainer } from 'recharts';\n\nclass TopEmployees extends Component {\n  constructor() {\n    super();\n    this.state = {\n      topEmployees: []\n    };\n  }\n\n  async componentDidMount() {\n    console.log(this.props.clients);\n    let topEmployees = [];\n    let emp = {};\n    let employees = [];\n    this.props.clients.forEach(c => {\n      if (emp[c.owner]) {\n        emp[c.owner] += 1;\n      } else {\n        emp[c.owner] = 1;\n        employees.push(c.owner);\n      }\n    });\n    employees.forEach(e => topEmployees.push({\n      name: e,\n      sales: emp[e]\n    }));\n    employees.sort((a, b) => a.sales > b.sales ? 1 : b.sales > a.sales ? -1 : 0);\n    employees.splice(3);\n    await this.setState({\n      topEmployees: employees\n    });\n  }\n\n  render() {\n    const renderLineChart = React.createElement(ResponsiveContainer, {\n      width: \"100%\",\n      height: 300,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(BarChart, {\n      data: this.state.topEmployees,\n      layout: \"vertical\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(Bar, {\n      dataKey: \"sales\",\n      fill: \"#8884d8\",\n      stroke: \"#8884d8\",\n      barSize: 30,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }), React.createElement(XAxis, {\n      type: \"number\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }), React.createElement(YAxis, {\n      type: \"category\",\n      dataKey: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }), React.createElement(Tooltip, {\n      Style: {\n        opacity: 0.5\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    })));\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \" Top Employees\", renderLineChart);\n  }\n\n}\n\nexport default TopEmployees;","map":{"version":3,"sources":["/Users/francopagella/Desktop/code/week10/crm/crm/src/components/routes/analytics/charts/TopEmployees.js"],"names":["React","Component","BarChart","Bar","Tooltip","Legend","CartesianGrid","XAxis","YAxis","ResponsiveContainer","TopEmployees","constructor","state","topEmployees","componentDidMount","console","log","props","clients","emp","employees","forEach","c","owner","push","e","name","sales","sort","a","b","splice","setState","render","renderLineChart","opacity"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { BarChart, Bar } from 'recharts';\nimport {  Tooltip, Legend, CartesianGrid, XAxis, YAxis, ResponsiveContainer } from 'recharts';\n\nclass TopEmployees extends Component {\n    constructor() {\n        super()\n        this.state = {\n            topEmployees: []\n        }\n\n    }\n    async componentDidMount() {\n        console.log(this.props.clients)\n        \n        let topEmployees = []\n        let emp = {}\n        let employees = []\n        this.props.clients.forEach(c => {\n            if (emp[c.owner]) {\n                emp[c.owner]+= 1\n            }\n            else{\n                emp[c.owner] = 1\n                employees.push(c.owner)\n            }\n        })\n        employees.forEach(e => topEmployees.push({name: e, sales: emp[e]}))\n        employees.sort((a,b) => (a.sales > b.sales) ? 1 : ((b.sales > a.sales) ? -1 : 0))\n        employees.splice(3)\n       await this.setState({topEmployees: employees})\n    }\n\n    render() {\n\n        const renderLineChart = (\n            <ResponsiveContainer width='100%' height={300}><BarChart data={this.state.topEmployees} layout='vertical'>\n                <Bar dataKey=\"sales\" fill=\"#8884d8\" stroke=\"#8884d8\" barSize={30} />\n                <XAxis type=\"number\" />\n                <YAxis type=\"category\" dataKey=\"name\" />\n                <Tooltip Style={{ opacity: 0.5 }} />\n\n            </BarChart></ResponsiveContainer>)\n\n\n        return (<div> Top Employees\n            {renderLineChart}\n        </div>)\n    }\n}\nexport default TopEmployees;"]},"metadata":{},"sourceType":"module"}