{"ast":null,"code":"var _jsxFileName = \"/Users/francopagella/Desktop/code/week10/crm/crm/src/components/routes/analytics/charts/SalesByCountry.js\";\nimport React, { Component } from 'react';\nimport { BarChart, Bar } from 'recharts';\nimport { Tooltip, Legend, CartesianGrid, XAxis, YAxis, ResponsiveContainer } from 'recharts';\n\nclass SalesByCounty extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      countries: this.props.countries\n    };\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    // Any time props.email changes, update state.\n    if (nextProps.countries !== this.props.countries) {\n      this.setState({\n        countries: nextProps.countries\n      });\n    }\n  }\n\n  render() {\n    let renderCountries = React.createElement(ResponsiveContainer, {\n      width: \"100%\",\n      height: 300,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(BarChart, {\n      data: this.state.countries,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(Bar, {\n      dataKey: \"sales\",\n      fill: \"#8884d8\",\n      stroke: \"#8884d8\",\n      barSize: 30,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }), React.createElement(XAxis, {\n      type: \"category\",\n      dataKey: \"country\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }), React.createElement(YAxis, {\n      type: \"number\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }), React.createElement(Tooltip, {\n      cursor: {\n        opacity: 0.5\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    })));\n    return React.createElement(\"div\", {\n      id: \"salesByCountry\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"Sales by Country:\", renderCountries);\n  }\n\n}\n\nexport default SalesByCounty;","map":{"version":3,"sources":["/Users/francopagella/Desktop/code/week10/crm/crm/src/components/routes/analytics/charts/SalesByCountry.js"],"names":["React","Component","BarChart","Bar","Tooltip","Legend","CartesianGrid","XAxis","YAxis","ResponsiveContainer","SalesByCounty","constructor","props","state","countries","UNSAFE_componentWillReceiveProps","nextProps","setState","render","renderCountries","opacity"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,EAAmBC,GAAnB,QAA8B,UAA9B;AACA,SAAUC,OAAV,EAAmBC,MAAnB,EAA2BC,aAA3B,EAA0CC,KAA1C,EAAiDC,KAAjD,EAAwDC,mBAAxD,QAAmF,UAAnF;;AAGA,MAAMC,aAAN,SAA4BT,SAA5B,CAAsC;AAClCU,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,SAAS,EAAE,KAAKF,KAAL,CAAWE;AADb,KAAb;AAIH;;AACDC,EAAAA,gCAAgC,CAACC,SAAD,EAAY;AACxC;AACA,QAAIA,SAAS,CAACF,SAAV,KAAwB,KAAKF,KAAL,CAAWE,SAAvC,EAAkD;AAChD,WAAKG,QAAL,CAAc;AACZH,QAAAA,SAAS,EAAEE,SAAS,CAACF;AADT,OAAd;AAGD;AACF;;AAGHI,EAAAA,MAAM,GAAG;AACL,QAAIC,eAAe,GAEf,oBAAC,mBAAD;AAAqB,MAAA,KAAK,EAAC,MAA3B;AAAkC,MAAA,MAAM,EAAE,GAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA+C,oBAAC,QAAD;AAAU,MAAA,IAAI,EAAE,KAAKN,KAAL,CAAWC,SAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAC3C,oBAAC,GAAD;AAAK,MAAA,OAAO,EAAC,OAAb;AAAqB,MAAA,IAAI,EAAC,SAA1B;AAAoC,MAAA,MAAM,EAAC,SAA3C;AAAqD,MAAA,OAAO,EAAE,EAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAD2C,EAE3C,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAuB,MAAA,OAAO,EAAC,SAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAF2C,EAG3C,oBAAC,KAAD;AAAS,MAAA,IAAI,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAH2C,EAI3C,oBAAC,OAAD;AAAS,MAAA,MAAM,EAAE;AAACM,QAAAA,OAAO,EAAE;AAAV,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJ2C,CAA/C,CAFJ;AAUA,WAAQ;AAAK,MAAA,EAAE,EAAC,gBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAEHD,eAFG,CAAR;AAIH;;AAjCiC;;AAmCtC,eAAeT,aAAf","sourcesContent":["import React, { Component } from 'react';\nimport { BarChart, Bar } from 'recharts';\nimport {  Tooltip, Legend, CartesianGrid, XAxis, YAxis, ResponsiveContainer } from 'recharts';\n\n\nclass SalesByCounty extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            countries: this.props.countries\n        }\n\n    }\n    UNSAFE_componentWillReceiveProps(nextProps) {\n        // Any time props.email changes, update state.\n        if (nextProps.countries !== this.props.countries) {\n          this.setState({\n            countries: nextProps.countries\n          });\n        }\n      }\n\n\n    render() {\n        let renderCountries = (\n           \n            <ResponsiveContainer width='100%' height={300}><BarChart data={this.state.countries} >\n                <Bar dataKey=\"sales\" fill=\"#8884d8\" stroke=\"#8884d8\" barSize={30} />\n                <XAxis type=\"category\" dataKey=\"country\" />\n                <YAxis   type=\"number\"/>\n                <Tooltip cursor={{opacity: 0.5}} />\n\n            </BarChart></ResponsiveContainer>)\n\n        return (<div id=\"salesByCountry\">\n            Sales by Country:\n            {renderCountries}\n        </div>)\n    }\n}\nexport default SalesByCounty;"]},"metadata":{},"sourceType":"module"}