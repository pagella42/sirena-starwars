{"ast":null,"code":"var _jsxFileName = \"/Users/francopagella/Desktop/code/week10/crm/crm/src/components/routes/actions/UpdateClient.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\n\nclass UpdateClient extends Component {\n  constructor() {\n    super();\n\n    this.update = async event => {\n      await this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.transfer = () => {\n      axios.put(\"http://localhost:5000/updateowner/\".concat(this.state.name), {\n        owner: this.state.owner\n      });\n    };\n\n    this.sendEmail = () => {\n      axios.put(\"http://localhost:5000/sendemail/\".concat(this.state.name), {\n        email: this.state.email\n      });\n    };\n\n    this.sell = () => {\n      axios.put(\"http://localhost:5000/sell/\".concat(this.state.name));\n    };\n\n    this.state = {\n      owners: [],\n      clients: [],\n      name: \"\",\n      transfer: \"\",\n      email: \"\"\n    };\n  }\n\n  async componentDidMount() {\n    let ownersobj = {};\n    let owners = [\"\"];\n    this.props.clients.forEach(d => {\n      if (!ownersobj[d.owner]) {\n        owners.push(d.owner);\n        ownersobj[d.owner] = true;\n      }\n    });\n    await this.setState({\n      owners: owners\n    });\n    let clients = [\"\"];\n    this.props.clients.forEach(d => {\n      clients.push(d.name);\n    });\n    await this.setState({\n      clients: clients\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"UPDATE CLIENT\", React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Client\", React.createElement(\"select\", {\n      onChange: this.update,\n      name: \"name\",\n      value: this.state.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, this.state.clients.map(c => React.createElement(\"option\", {\n      value: c,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, c)))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Trasfer ownership to:\", React.createElement(\"select\", {\n      onChange: this.update,\n      name: \"transfer\",\n      value: this.state.transfer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, this.state.owners.map(o => React.createElement(\"option\", {\n      value: o,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, o))), React.createElement(\"button\", {\n      onClick: this.transfer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"Transfer\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"Send email:\", React.createElement(\"select\", {\n      onChange: this.update,\n      name: \"email\",\n      value: this.state.email,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"A\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"A\"), React.createElement(\"option\", {\n      value: \"B\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"B\"), React.createElement(\"option\", {\n      value: \"C\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"C\"), React.createElement(\"option\", {\n      value: \"D\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"D\")), React.createElement(\"button\", {\n      onClick: this.sendEmail,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"Send\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"Declare sale \", React.createElement(\"button\", {\n      onClick: this.sell,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"Declare\")));\n  }\n\n}\n\nexport default UpdateClient;","map":{"version":3,"sources":["/Users/francopagella/Desktop/code/week10/crm/crm/src/components/routes/actions/UpdateClient.js"],"names":["React","Component","axios","UpdateClient","constructor","update","event","setState","target","name","value","transfer","put","state","owner","sendEmail","email","sell","owners","clients","componentDidMount","ownersobj","props","forEach","d","push","render","map","c","o"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\n\n\nclass UpdateClient extends Component {\n    constructor() {\n        super()\n        this.state = {\n            owners: [],\n            clients: [],\n            name: \"\",\n            transfer: \"\",\n            email: \"\"\n        }\n    }\n\n    async componentDidMount() {\n        let ownersobj = {}\n        let owners = [\"\"]\n        this.props.clients.forEach(d => {\n            if (!ownersobj[d.owner]) {\n                owners.push(d.owner)\n                ownersobj[d.owner] = true\n\n            }\n        })\n       await this.setState({owners: owners})\n\n\n        let clients =[\"\"]\n        this.props.clients.forEach(d => {\n                clients.push(d.name)\n        })\n      await  this.setState({clients: clients})\n\n    }\n\n    update = async (event) => {\n        await this.setState({\n            [event.target.name]: event.target.value,\n        })\n    }\n\n    transfer = () => {\n        axios.put(`http://localhost:5000/updateowner/${this.state.name}`, ({ owner: this.state.owner }))\n    }\n    sendEmail = () => {\n        axios.put(`http://localhost:5000/sendemail/${this.state.name}`, ({ email: this.state.email }))\n    }\n    sell = () => {\n        axios.put(`http://localhost:5000/sell/${this.state.name}`)\n    }\n\n\n\n\n    render() {\n\n        return (<div>\n            UPDATE CLIENT\n            {/* look for client */}\n            {/* <div>Client: <input type=\"text\" name=\"name\" value={this.state.name} onChange={this.update} placeholder=\"Client name\" /></div> */}\n            <div>Client \n                 <select onChange={this.update} name=\"name\" value={this.state.name}>\n                    {this.state.clients.map(c => <option value={c}>{c}</option>)}\n\n                </select>\n            </div>\n\n            {/* transfer client */}\n            <div>Trasfer ownership to:\n                 <select onChange={this.update} name=\"transfer\" value={this.state.transfer}>\n                    {this.state.owners.map(o => <option value={o}>{o}</option>)}\n\n                </select>\n                <button onClick={this.transfer} >Transfer</button>\n            </div>\n\n            {/* send an email to client */}\n            <div>Send email:\n                    <select onChange={this.update} name=\"email\" value={this.state.email}>\n                        \n                    <option value=\"A\">A</option>\n                    <option value=\"B\">B</option>\n                    <option value=\"C\">C</option>\n                    <option value=\"D\">D</option>\n                </select>\n\n                <button onClick={this.sendEmail}>Send</button>\n            </div>\n\n            {/* declare sale */}\n            <div>Declare sale <button onClick={this.sell}>Declare</button></div>\n\n        </div>)\n    }\n\n}\n\nexport default UpdateClient;"]},"metadata":{},"sourceType":"module"}