{"ast":null,"code":"var _jsxFileName = \"/Users/francopagella/Desktop/code/week10/crm/crm/src/components/routes/analytics/charts/SalesSince.js\";\nimport React, { Component } from 'react';\nimport { LineChart, Line } from 'recharts';\nimport { Tooltip, Legend, CartesianGrid, XAxis, YAxis, ResponsiveContainer } from 'recharts';\n\nclass SalesSince extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sales: this.props.sales\n    };\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    // Any time props.email changes, update state.\n    if (nextProps.sales !== this.props.sales) {\n      this.setState({\n        sales: nextProps.sales\n      });\n    }\n  }\n\n  render() {\n    const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    let today = new Date();\n    let sales = React.createElement(ResponsiveContainer, {\n      width: \"100%\",\n      height: 300,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(LineChart, {\n      data: this.state.sales,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(Line, {\n      dataKey: \"sales\",\n      stroke: \"#8884d8\",\n      lineSize: 30,\n      dot: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }), React.createElement(XAxis, {\n      dataKey: \"date\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }), React.createElement(YAxis, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    })));\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"Sales since  \", monthNames[today.getMonth() - 1], \"  \", today.getDate(), sales);\n  }\n\n}\n\nexport default SalesSince;","map":{"version":3,"sources":["/Users/francopagella/Desktop/code/week10/crm/crm/src/components/routes/analytics/charts/SalesSince.js"],"names":["React","Component","LineChart","Line","Tooltip","Legend","CartesianGrid","XAxis","YAxis","ResponsiveContainer","SalesSince","constructor","props","state","sales","UNSAFE_componentWillReceiveProps","nextProps","setState","render","monthNames","today","Date","getMonth","getDate"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,SAAT,EAAoBC,IAApB,QAAgC,UAAhC;AACA,SAAUC,OAAV,EAAmBC,MAAnB,EAA2BC,aAA3B,EAA0CC,KAA1C,EAAiDC,KAAjD,EAAwDC,mBAAxD,QAAmF,UAAnF;;AAIA,MAAMC,UAAN,SAAyBT,SAAzB,CAAmC;AAC/BU,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE,KAAKF,KAAL,CAAWE;AADT,KAAb;AAIH;;AACDC,EAAAA,gCAAgC,CAACC,SAAD,EAAY;AACxC;AACA,QAAIA,SAAS,CAACF,KAAV,KAAoB,KAAKF,KAAL,CAAWE,KAAnC,EAA0C;AACxC,WAAKG,QAAL,CAAc;AACZH,QAAAA,KAAK,EAAEE,SAAS,CAACF;AADL,OAAd;AAGD;AACF;;AAKHI,EAAAA,MAAM,GAAG;AACL,UAAMC,UAAU,GAAG,CAAC,SAAD,EAAY,UAAZ,EAAwB,OAAxB,EAAiC,OAAjC,EAA0C,KAA1C,EAAiD,MAAjD,EACf,MADe,EACP,QADO,EACG,WADH,EACgB,SADhB,EAC2B,UAD3B,EACuC,UADvC,CAAnB;AAGA,QAAIC,KAAK,GAAG,IAAIC,IAAJ,EAAZ;AAEA,QAAIP,KAAK,GACL,oBAAC,mBAAD;AAAqB,MAAA,KAAK,EAAC,MAA3B;AAAkC,MAAA,MAAM,EAAE,GAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA+C,oBAAC,SAAD;AAAW,MAAA,IAAI,EAAE,KAAKD,KAAL,CAAWC,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAC3C,oBAAC,IAAD;AAAM,MAAA,OAAO,EAAC,OAAd;AAAsB,MAAA,MAAM,EAAC,SAA7B;AAAuC,MAAA,QAAQ,EAAE,EAAjD;AAAqD,MAAA,GAAG,EAAE,IAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAD2C,EAE3C,oBAAC,KAAD;AAAQ,MAAA,OAAO,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAF2C,EAG3C,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAH2C,CAA/C,CADJ;AAOA,WAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACUK,UAAU,CAACC,KAAK,CAACE,QAAN,KAAmB,CAApB,CADpB,QAC8CF,KAAK,CAACG,OAAN,EAD9C,EAEHT,KAFG,CAAR;AAIH;;AArC8B;;AAuCnC,eAAeJ,UAAf","sourcesContent":["import React, { Component } from 'react';\nimport { LineChart, Line } from 'recharts';\nimport {  Tooltip, Legend, CartesianGrid, XAxis, YAxis, ResponsiveContainer } from 'recharts';\n\n\n\nclass SalesSince extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            sales: this.props.sales\n        }\n\n    }\n    UNSAFE_componentWillReceiveProps(nextProps) {\n        // Any time props.email changes, update state.\n        if (nextProps.sales !== this.props.sales) {\n          this.setState({\n            sales: nextProps.sales\n          });\n        }\n      }\n\n\n\n\n    render() {\n        const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n            \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n        ]\n        let today = new Date()\n\n        let sales = (\n            <ResponsiveContainer width='100%' height={300}><LineChart data={this.state.sales} >\n                <Line dataKey=\"sales\" stroke=\"#8884d8\" lineSize={30} dot={true}/>\n                <XAxis  dataKey=\"date\" />\n                <YAxis />\n            </LineChart></ResponsiveContainer>)\n\n        return (<div>\n            Sales since  {monthNames[today.getMonth() - 1]}  {today.getDate()}\n            {sales}\n        </div>)\n    }\n}\nexport default SalesSince;"]},"metadata":{},"sourceType":"module"}